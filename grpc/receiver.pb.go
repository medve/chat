// Code generated by protoc-gen-go. DO NOT EDIT.
// source: receiver.proto

package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ChatMessage struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	AuthorId             int64    `protobuf:"varint,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	Timestamp            int32    `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChatMessage) Reset()         { *m = ChatMessage{} }
func (m *ChatMessage) String() string { return proto.CompactTextString(m) }
func (*ChatMessage) ProtoMessage()    {}
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_receiver_b935b1368597d68d, []int{0}
}
func (m *ChatMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChatMessage.Unmarshal(m, b)
}
func (m *ChatMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChatMessage.Marshal(b, m, deterministic)
}
func (dst *ChatMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChatMessage.Merge(dst, src)
}
func (m *ChatMessage) XXX_Size() int {
	return xxx_messageInfo_ChatMessage.Size(m)
}
func (m *ChatMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ChatMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ChatMessage proto.InternalMessageInfo

func (m *ChatMessage) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *ChatMessage) GetAuthorId() int64 {
	if m != nil {
		return m.AuthorId
	}
	return 0
}

func (m *ChatMessage) GetTimestamp() int32 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type ReceiverReply struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReceiverReply) Reset()         { *m = ReceiverReply{} }
func (m *ReceiverReply) String() string { return proto.CompactTextString(m) }
func (*ReceiverReply) ProtoMessage()    {}
func (*ReceiverReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_receiver_b935b1368597d68d, []int{1}
}
func (m *ReceiverReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReceiverReply.Unmarshal(m, b)
}
func (m *ReceiverReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReceiverReply.Marshal(b, m, deterministic)
}
func (dst *ReceiverReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReceiverReply.Merge(dst, src)
}
func (m *ReceiverReply) XXX_Size() int {
	return xxx_messageInfo_ReceiverReply.Size(m)
}
func (m *ReceiverReply) XXX_DiscardUnknown() {
	xxx_messageInfo_ReceiverReply.DiscardUnknown(m)
}

var xxx_messageInfo_ReceiverReply proto.InternalMessageInfo

func (m *ReceiverReply) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*ChatMessage)(nil), "ChatMessage")
	proto.RegisterType((*ReceiverReply)(nil), "ReceiverReply")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ReceiverClient is the client API for Receiver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ReceiverClient interface {
	SendMessage(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*ReceiverReply, error)
}

type receiverClient struct {
	cc *grpc.ClientConn
}

func NewReceiverClient(cc *grpc.ClientConn) ReceiverClient {
	return &receiverClient{cc}
}

func (c *receiverClient) SendMessage(ctx context.Context, in *ChatMessage, opts ...grpc.CallOption) (*ReceiverReply, error) {
	out := new(ReceiverReply)
	err := c.cc.Invoke(ctx, "/Receiver/SendMessage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ReceiverServer is the server API for Receiver service.
type ReceiverServer interface {
	SendMessage(context.Context, *ChatMessage) (*ReceiverReply, error)
}

func RegisterReceiverServer(s *grpc.Server, srv ReceiverServer) {
	s.RegisterService(&_Receiver_serviceDesc, srv)
}

func _Receiver_SendMessage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ChatMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReceiverServer).SendMessage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Receiver/SendMessage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReceiverServer).SendMessage(ctx, req.(*ChatMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Receiver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Receiver",
	HandlerType: (*ReceiverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SendMessage",
			Handler:    _Receiver_SendMessage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "receiver.proto",
}

func init() { proto.RegisterFile("receiver.proto", fileDescriptor_receiver_b935b1368597d68d) }

var fileDescriptor_receiver_b935b1368597d68d = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4a, 0x4d, 0x4e,
	0xcd, 0x2c, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x8a, 0xe1, 0xe2, 0x76, 0xce,
	0x48, 0x2c, 0xf1, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x15, 0x12, 0xe2, 0x62, 0x29, 0x49, 0xad,
	0x28, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0xb3, 0x85, 0xa4, 0xb9, 0x38, 0x13, 0x4b,
	0x4b, 0x32, 0xf2, 0x8b, 0xe2, 0x33, 0x53, 0x24, 0x98, 0x14, 0x18, 0x35, 0x98, 0x83, 0x38, 0x20,
	0x02, 0x9e, 0x29, 0x42, 0x32, 0x5c, 0x9c, 0x25, 0x99, 0xb9, 0xa9, 0xc5, 0x25, 0x89, 0xb9, 0x05,
	0x12, 0xcc, 0x0a, 0x8c, 0x1a, 0xac, 0x41, 0x08, 0x01, 0x25, 0x75, 0x2e, 0xde, 0x20, 0xa8, 0x7d,
	0x41, 0xa9, 0x05, 0x39, 0x95, 0x42, 0x62, 0x5c, 0x6c, 0xc5, 0x25, 0x89, 0x25, 0xa5, 0xc5, 0x50,
	0x1b, 0xa0, 0x3c, 0x23, 0x4b, 0x2e, 0x0e, 0x98, 0x42, 0x21, 0x5d, 0x2e, 0xee, 0xe0, 0xd4, 0xbc,
	0x14, 0x98, 0x93, 0x78, 0xf4, 0x90, 0x1c, 0x28, 0xc5, 0xa7, 0x87, 0x62, 0xa0, 0x12, 0x43, 0x12,
	0x1b, 0xd8, 0x23, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8d, 0xaa, 0xd8, 0x45, 0xda, 0x00,
	0x00, 0x00,
}
